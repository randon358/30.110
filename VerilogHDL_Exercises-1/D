//module
module fs(B, D, x, y, z);
    output reg B, D;
    input x, y, z;

    always @(*) begin
        D <= (~x & y & z) | (~x & ~y & ~z) | (x & ~y & ~z) | (x & y & z);
        B <= (~x & y) | (~x & z) | (y & z);
    end
endmodule


//testbench
module main;
    wire Bt, Dt;
    reg x, y, z;

    // Instantiate the full subtractor
    fs fs1(Bt, Dt, x, y, z);

    // Test sequence
    initial x = 0; always #40 x = ~x;
    initial y = 0; always #20 y = ~y;
    initial z = 0; always #10 z = ~z;

    // Finish the simulation after a certain time
    initial begin
        #71 $finish;
    end

    // Monitor the outputs
    initial begin
        $monitor($time, " B=%b, D=%b | x=%b, y=%b, z=%b", Bt, Dt, x, y, z);
    end
endmodule
