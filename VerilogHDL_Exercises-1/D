Question 1: 

//Module description
module full_subtractor(
    input x,
    input y,
    input z,
    output reg D,
    output reg B
);

always @(*) begin
    D = (~x & y & z) | (x & ~y & z) | (x & y & ~z) | (~x & ~y & ~z);
    B = (~x & ~y) | (y & z) | (~x & z);
end

endmodule

//testbench
module testbench;
    reg x, y, z;
    wire D, B;

    // Instantiate the full subtractor
    full_subtractor uut(
        .x(x),
        .y(y),
        .z(z),
        .D(D),
        .B(B)
    );

    initial begin
        // Test all possible combinations of x, y, and z
        $display("x y z | D B");
        for (int i = 0; i < 8; i++) begin
            {x, y, z} = i[2:0];
            #10; // Wait for the outputs to settle
            $display("%b %b %b | %b %b", x, y, z, D, B);
        end

        #10 $finish; // Finish the simulation after all tests
    end
endmodule

